#!/bin/sh
# TODO:
# * pull up defaults so usage can show them
# * pull up functions to work doesn't start in the middle
# * check that PATH contains INSTALL_DIR
# * consider all the words

usage() {
  cat <<-USAGE
Usage: ${0##*/} [<option>...] [<path>]
Install exercism client to <path>. Default:
  * determined interactively if possible
  * /usr/local/bin if run as root
  * $HOME/bin otherwise
Options:
  -v <version>             Install client version <version>.      Default: latest
  -o <operating system>    Install client for <operating system>. Default: guessed
  -a <architecture>        Install client for <architecture>.     Default: guessed
USAGE
}

fail() {
  echo "${0##*/}: $@" >&2
  exit 1
}

while getopts o:a:v:h OPTNAME; do
  case $OPTNAME in
    o) CLI_OS=$OPTARG;;
    a) CLI_ARCH=$OPTARG;;
    v) CLI_VERSION=$OPTARG;;
    h) usage; exit;;
    *) usage >&2; exit 64;;
  esac
done
shift $(expr $OPTIND - 1)

INSTALL_DIR=$1; shift

if [ $# -ne 0 ]; then
  usage >&2
  exit 64
fi

# TODO: this is a mess
if [ -z "$INSTALL_DIR" ]; then
  if [ "$UID" -eq 0 ]; then
    DEFAULT_DIR=/usr/local/bin
  else
    DEFAULT_DIR=$HOME/bin
  fi
  if [ -t 0 ]; then
    read -p "install client into: [$DEFAULT_DIR] " INSTALL_DIR
    if [ -z "$INSTALL_DIR" ]; then
      INSTALL_DIR=$DEFAULT_DIR
    fi
  else
    INSTALL_DIR=$DEFAULT_DIR
  fi
fi

test -d "$INSTALL_DIR" ||
mkdir -p "$INSTALL_DIR" ||
fail "unable to create installation directory $INSTALL_DIR"

test -w "$INSTALL_DIR" ||
fail "unable to write installation directory $INSTALL_DIR"

if   command -v curl >/dev/null; then DOWNLOADER=curl
elif command -v wget >/dev/null; then DOWNLOADER=wget
else fail "missing dependencies, please install one of: curl, wget"
fi

extract() {
  tar xz -C "$1" exercism ||
  fail "failed to extract exercism"
}

download() {
  case "$DOWNLOADER" in
    curl) curl --insecure --location "$@";;
    wget) wget --output-document=- "$@";;
  esac ||
  fail "failed to download $@"
}

follow() {
  case "$DOWNLOADER" in
    curl) curl --head --silent "$@";;
    wget) wget --server-response --quiet --output-document=/dev/null "$@" 2>&1;;
  esac | tr -d '\r'
}

guess_cli_os() {
  case "$(uname -s)" in
    Darwin) echo "darwin";;
    *)      echo "linux";;
  esac
}

guess_cli_arch() {
  case "$(uname -m)" in
    x86_64) echo "amd64";;
    *)      echo "386";;
  esac
}

latest_cli_version() {
  follow https://github.com/exercism/cli/releases/latest | filter_version_tag
}

filter_version_tag() {
  awk -v FS=/ '/Location:/{print $NF}'
}

: ${CLI_OS:=$(guess_cli_os)}
: ${CLI_ARCH:=$(guess_cli_arch)}
: ${CLI_VERSION:=$(latest_cli_version)}

URL="https://github.com/exercism/cli/releases/download/$CLI_VERSION/exercism-$CLI_OS-$CLI_ARCH.tgz"

download "$URL" | extract "$INSTALL_DIR"
